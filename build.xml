<project name="coherence-bootstrap" default="run">

    <property environment="env"/>
    <property name="jdk.home.1.5" value="${env.JAVA_HOME}"/>
    <property name="basedir" location="."/>
    <property name="reports.unit" value="${basedir}/reports"/>
    <property name="coherence-utils.dir" value="../../../coherence-utils/trunk"/>

    <path id="classpath">
        <pathelement location="${basedir}/lib/tangosol.jar"/>
        <pathelement location="${basedir}/lib/coherence.jar"/>
        <pathelement location="${basedir}/lib/junit.jar"/>
        <pathelement location="${basedir}/classes"/>
        <pathelement location="lib/coherence-utils.jar"/>
    </path>


    <target name="foo">
        <echo>test stuff</echo>
        <echo>java home is "${env.JAVA_HOME}"</echo>
        <echo>coherence home is "${env.JAVA_HOME6}"</echo>
    </target>

    <target name="run"
            depends="clean, refresh-coherence-utils, compile, test, clean-prezip, zip"/>

    <target name="refresh-coherence-utils"
            depends="compile-coherence-utils, jar-coherence-utils, copy-coherence-utils"/>

    <target name="compile-coherence-utils">
        <echo>Running compile-coherence-utils with JDK "$(env.JAVA_HOME)"</echo>
        <ant antfile="build.xml" dir="${coherence-utils.dir}/" target="compile"></ant>
    </target>

    <target name="jar-coherence-utils">
        <ant antfile="build.xml" dir="${coherence-utils.dir}" target="jar"></ant>
        <echo>Completed jar-coherence-utils</echo>
    </target>

    <target name="copy-coherence-utils">
        <copy file="${coherence-utils.dir}/coherence-utils.jar" todir="lib"></copy>
        <echo>Copied coherence-utils.jar to local lib dir</echo>
    </target>


    <target name="clean">
        <delete dir="${basedir}/reports"/>
        <mkdir dir="${basedir}/reports"/>
        <delete file="${basedir}/HelloWorld.zip"/>
        <delete dir="${basedir}/classes"/>
        <mkdir dir="${basedir}/classes"/>
    </target>

    <target name="clean-prezip">
        <delete dir="${basedir}/log"/>
        <delete dir="${basedir}/logs"/>
        <delete file="${basedir}/HelloWorld.zip"/>
        <delete dir="${basedir}/classes"/>
        <delete file="${basedir}/CLUSTER_DATA_LOSS_DATECTED"/>
    </target>

    <target name="test">
        <junit printsummary="yes" dir="${basedir}" fork="true" haltonfailure="false"
               failureproperty="junit.failed">
            <batchtest todir="${reports.unit}">
                <fileset dir="${basedir}/src" includes="**/*Example.java"/>
            </batchtest>
            <formatter type="xml"/>
            <classpath refid="classpath"/>
        </junit>

        <echo>Aggregating report</echo>
        <junitreport todir="${reports.unit}">
            <fileset dir="${reports.unit}" includes="TEST-*.xml"/>
            <report format="frames" todir="${reports.unit}"/>
        </junitreport>

        <fail if="junit.failed" message="Oh no - the tests failed!!"/>
    </target>

    <path id="all-sources-path">
        <dirset dir=".">
            <include name="${basedir}/test"/>
        </dirset>
    </path>

    <target name="zip">
        <zip destfile="${basedir}/../HelloWorld.zip" basedir="${basedir}"/>
    </target>

    <target name="compile">
        <echo message="compiling src with ${jdk.home.1.5}"></echo>
        <mkdir dir="${basedir}/classes"/>
        <echo>running in ${basedir}</echo>
        <javac destdir="${basedir}/classes"
               fork="true"
               executable="${jdk.home.1.5}/bin/javac"
               srcdir="${basedir}/src"
               memoryMaximumSize="1024m">
            <src refid="all-sources-path"/>
            <classpath refid="classpath"/>
        </javac>
    </target>
</project>
